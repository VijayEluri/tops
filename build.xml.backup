<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="help" name="tops">

	<property file="build.properties"/>

	<property name="lib" value="${home}/code/java/lib"/>
	<property name="jar.dir" value="${basedir}/jars"/>
	<property name="docbook.dir" value="${home}/code/java/docbook-xsl"/>
	<property name="manual.out" value="${basedir}/docs/manual"/>
	<property name="manual.src" value="${basedir}/docs/manual-src"/>
	<property name="dist.parent.dir" value="${basedir}/distribution"/>
	<property name="production.server" value="balabio"/>
	<property name="test.server" value="akun.dcs.gla.ac.uk"/>
	<property name="dist.dir" value="${dist.parent.dir}/dist"/>
	<property name="tops.site.dir" value="/var/www/html/tops"/>
	<property name="tomcat.dir" value="${home}/tomcat"/>
	<property name="test.dir" value="web"/>
	<property name="j3dlib" value="${home}/code/java/j2re1.4.2/lib/ext"/>
	<property name="dwjar" value="${jar.dir}/dw_tops.jar"/>
	<property name="thirdpartylib.dir" value="${basedir}/thirdpartylibs"/>
	<property name="pjatoolsjar" value="${thirdpartylib.dir}/pjatools.jar"/>
	<property name="pjajar" value="${thirdpartylib.dir}/pja.jar"/>
	<property name="itextjar" value="${thirdpartylib.dir}/iText.jar"/>
	<property name="utilsjar" value="${lib}/utils/utils.jar"/>
	<property name="oreillyjar" value="${thirdpartylib.dir}/cos.jar"/>
	<property name="vecmathjar" value="${thirdpartylib.dir}/vecmath.jar"/>
	<property name="alljars" value="${servletjar}:${dwjar}:${pjatoolsjar}:${pjajar}:${itextjar}:${utilsjar}:${vecmathjar}:${oreillyjar}"/>

	<!-- ANT TASKDEFS -->
	<taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask"/>
	<taskdef name="install"   classname="org.apache.catalina.ant.InstallTask"/>
	<taskdef name="list"      classname="org.apache.catalina.ant.ListTask"/>
	<taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
	<taskdef name="remove"    classname="org.apache.catalina.ant.RemoveTask"/>
	<taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask"/>
	<taskdef name="roles"     classname="org.apache.catalina.ant.RolesTask"/>
	<taskdef name="start"     classname="org.apache.catalina.ant.StartTask"/>
	<taskdef name="stop"      classname="org.apache.catalina.ant.StopTask"/>
	<taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>
	<!-- /ANT TASKDEFS -->

	<!-- ANT TARGETS -->
	<target name="reload-test" description="Reloads the Web Application on the test server">
		<echo message="Reloading ${app.name} on test server ..."/>
		<reload url="${test.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${app.name}"/>
	</target>

	<target name="reload-production" description="Reloads the Web Application on the production server">
		<echo message="Reloading ${app.name} on production server..."/>
		<reload url="${production.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${app.name}"/>
	</target>

	<target name="start-test" description="Start the Web Application on the test server">
		<echo message="Starting the Web Application on the test server..."/>
		<start url="${test.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${app.name}"/>
	</target>

	<target name="start-production" description="Start the Web Application on the production server">
		<echo message="Starting the Web Application on the production server..."/>
		<start url="${production.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${app.name}"/>
	</target>

	<target name="stop-test" description="Stop the Web Application on the test server">
		<echo message="Stopping the Web Application on the test server..."/>
		<stop url="${test.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${app.name}"/>
	</target>

	<target name="stop-production" description="Stop the Web Application on the production server">
		<echo message="Stoping the Web Application on the production server..."/>
		<stop url="${production.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${app.name}"/>
	</target>
	<!-- /ANT TARGETS -->

	<target description="the editor applet" name="applet-editor">
		<javac classpath="${dwjar}" debug="true" destdir="classes" srcdir="src">
			<include name="tops/web/display/SimpleEditorApplet.java"/>
			<include name="tops/web/display/TopsDrawCanvas.java"/>
		</javac>
		<jar destfile="${jar.dir}/editor.jar" update="true">
			<fileset dir="classes">
				<include name="tops/web/display/SimpleEditorApplet.class"/>
				<include name="tops/web/display/TopsDrawCanvas.class"/>
			</fileset>
			<fileset dir="dw/classes">
				<include name="dw_utils/*.class"/>
				<include name="protein/*.class"/>
				<include name="topseditor/LabelInput.class"/>
				<include name="topseditor/UserArrow.class"/>
				<include name="topseditor/UserLabel.class"/>
			</fileset>
		</jar>
	</target>
	
	<target description="the viewer applet" name="applet-viewer">
		<javac debug="true" destdir="classes" srcdir="src">
			<include name="tops/web/display/DiagramApplet.java"/>
			<include name="tops/view/tops2D/diagram/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/viewer.jar" update="true">
			<fileset dir="classes">
				<include name="tops/web/display/DiagramApplet.class"/>
				<include name="tops/view/tops2D/diagram/*.class"/>
			</fileset>
		</jar>
	</target>
	
	<target description="the database interface beans" name="beans">
		<javac debug="true" destdir="classes" srcdir="src">
			<include name="tops/beans/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/tops-beans.jar" update="true">
			<fileset dir="classes">
				<include name="tops/beans/*.class"/>
			</fileset>
		</jar>
	</target>

	<target description="build all the classes" depends="setup,dw,db,display,drg,engine,helix,inserts,juris,translation,webengine" name="build">
	</target>

	<target description="the database connectivity classes" name="db">
		<javac classpath="${alljars}" debug="true" destdir="classes" srcdir="src">
			<include name="tops/db/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/db.jar" update="true">
			<fileset dir="classes">
				<include name="tops/db/*.class"/>
			</fileset>
		</jar>
	</target>


	<target description="create the database tables" name="db-create-structure">
		<available classname="${db.driver}" property="db.driver.present"/>
		<sql 
			driver="${db.driver}" 
			url="${db.url}" 
			userid="${db.username}" 
			password="${db.password}"
			src="${db.structure.file}"
		/>
	</target>

	<target description="dump the database tables" name="db-dump-structure">
		<available classname="${db.driver}" property="db.driver.present"/>
	</target>

	<target description="dump the database tables" name="db-dump" if="db.driver.present">
		<sql 
			driver="${db.driver}" 
			url="${db.url}" 
			userid="${db.username}" 
			password="${db.password}" 
			print="yes">
			Show tables;
		</sql>
	</target>

	<target description="build the dw classes" name="dw">
		<subant antfile="build.xml" buildpath="dw" target="compile"/>
		<move file="dw/dw_tops.jar" todir="jars"/> 
	</target>

	<target name="crossvalidate">
		<javac debug="true" destdir="classes" srcdir="src">
			<include name="tops/engine/crossvalidate/*.java"/>
			<include name="tops/model/*.java"/>
			<include name="tops/engine/drg/*.java"/>
			<include name="tops/engine/inserts/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/crossvalidate.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="tops.engine.crossvalidate.CrossValidator"/>
			</manifest>
			<fileset dir="classes">
				<include name="tops/engine/TopsStringFormatException.class"/>
				<include name="tops/engine/Edge.class"/>
				<include name="tops/engine/Vertex.class"/>
				<include name="tops/engine/TParser.class"/>
				<include name="tops/engine/crossvalidate/*.class"/>
				<include name="tops/model/TopsParser.class"/>
				<include name="tops/model/Level.class"/>
				<include name="tops/model/LevelIterator.class"/>
				<include name="tops/model/Rep.class"/>
				<include name="tops/model/RepSet.class"/>
				<include name="tops/engine/drg/*.class"/>
				<include name="tops/engine/inserts/*.class"/>
			</fileset>
		</jar>
	</target>

	<target name="debug">
		<javac destdir="debug" srcdir="src/debug"/>
		<jar destfile="tops_debug.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="tops.Explorer"/>
			</manifest>
			<fileset dir="debug">
				<include name="tops/*.class"/>
			</fileset>
		</jar>
	</target>
	
	<target description="compile the web cartoon and diagram drawing" name="display">
		<javac classpath="${servletjar}:${dwjar}:${pjatoolsjar}:${pjajar}:${itextjar}" debug="true" destdir="classes" srcdir="src">
				<include name="tops/web/display/*.java"/>
				<include name="tops/view/tops2D/cartoon/*.java"/>
				<include name="tops/view/tops2D/cartoon/builder/*.java"/>
				<include name="tops/view/tops2D/display/*.java"/>
		</javac>
			<jar destfile="${jar.dir}/display.jar" update="true">
					<fileset dir="classes">
						<include name="tops/web/display/*.class"/>
						<include name="tops/view/tops2D/cartoon/*.class"/>
						<include name="tops/view/tops2D/cartoon/builder/*.class"/>
						<include name="tops/view/tops2D/diagram/*.class"/>
				</fileset>
		</jar>
	</target>

	<target depends="display" description="do display, then scp to production" name="display-production">
		<exec executable="scp">
			<arg line="${jar.dir}/display.jar ${production.server}:~/tops/WEB-INF/lib"/>
		</exec>
		<antcall target="reload-production"/>
	</target>

	<target depends="display" description="do display, then move to test" name="display-test">
		<copy todir="${test.dir}/WEB-INF/lib" file="${jar.dir}/display.jar"/>
	</target>

	<target description="generate javadoc documentation" name="docs">
		<javadoc classpath="classes:${alljars}" destdir="docs/javadocs" excludepackagenames="tops.view.tops3D" packagenames="tops.*" private="true" sourcepath="src">
		</javadoc>
	</target>

	<target description="create a standalone distribution" depends="drg,tiny,translation" name="dist">
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}/bin"/>
		<copy file="${dist.parent.dir}/README" todir="${dist.dir}"/>
		<copy todir="${dist.dir}/bin">
			<fileset dir="bin">
				<include name="*.sh"/>
			</fileset>
		</copy>
		<mkdir dir="${dist.dir}/jars"/>
		<copy file="${jar.dir}/drg.jar" todir="${dist.dir}/jars"/>
		<copy file="${jar.dir}/tiny.jar" todir="${dist.dir}/jars"/>
		<copy file="${jar.dir}/translation.jar" todir="${dist.dir}/jars"/>
		<!-- DON'T INCLUDE MANUAL!
		<mkdir dir="${dist.dir}/docs"/>
		<mkdir dir="${dist.dir}/docs/manual"/>
		<mkdir dir="${dist.dir}/docs/javadocs"/>
		<copy todir="${dist.dir}/docs/manual">
			<fileset dir="docs/manual"/>
		</copy>
		<copy todir="${dist.dir}/docs/javadocs">
			<fileset dir="docs/javadocs"/>
		</copy>
		-->
	</target>

	<target description="create a zipfile distribution" depends="dist" name="dist-zip">
		<zip destfile="${dist.parent.dir}/tops.zip" basedir="${dist.dir}"/>
	</target>

	<target description="create a tarred bzip2 distribution" depends="dist" name="dist-bzip2">
		<tar tarfile="${dist.parent.dir}/tops.tar" basedir="${dist.dir}"/>
		<bzip2 src="${dist.parent.dir}/tops.tar" destfile="${dist.parent.dir}/tops.tar.bz2"/>
		<delete file="${dist.parent.dir}/tops.tar"/>
	</target>

	<target description="create all distributions, copy to website" depends="dist-bzip2, dist-zip" name="dist-all">
		<exec executable="scp">
			<arg line="${dist.parent.dir}/README ${dist.parent.dir}/tops.zip ${dist.parent.dir}/tops.tar.bz2 ${jar.dir}/drg.jar ${jar.dir}/display.jar ${jar.dir}/2D.jar ${jar.dir}/translation.jar ${production.server}:${tops.site.dir}/lib"/>
		</exec>
	</target>

	<target description="pattern discovery using drg&apos;s heuristic" name="drg">
		<javac debug="true" destdir="classes" srcdir="src">
			<include name="tops/engine/*.java"/>
			<include name="tops/engine/drg/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/drg.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="tops.engine.drg.Explorer"/>
			</manifest>
			<fileset dir="classes">
				<include name="tops/engine/*.class"/>
				<include name="tops/engine/drg/*.class"/>
			</fileset>
		</jar>
	</target>

	<target description="the basic classes" name="engine">
		<javac debug="true" destdir="classes" srcdir="src">
			
		    <include name="tops/engine/*.java"/>
        </javac>
		<jar destfile="${jar.dir}/engine.jar" update="true">
			<fileset dir="classes">
				<include name="tops/engine/*.class"/>
			</fileset>
		</jar>
	</target>
		
	
	
	<target description="matcher and explorer modified to handle HPP" name="helix">
		<javac debug="true" destdir="classes" srcdir="src">
			<include name="tops/engine/*.java"/>
			<include name="tops/engine/helix/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/helix.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="tops.engine.helix.Explorer"/>
			</manifest>
			<fileset dir="classes">
				<include name="tops/engine/*.class"/>
				<include name="tops/engine/helix/*.class"/>
			</fileset>
		</jar>
	</target>

	<target description="show some help information" name="help">
		<echo message="To list the possible targets type 'ant -projecthelp'"/>
		<echo message="Then run one with 'ant &#91;targetname&#93;'"/>
	</target>
	
	<target description="branch of engine code with inserts" name="inserts">
        
        <javac debug="true" destdir="classes" srcdir="src">
            <include name="tops/engine/*.java"/>
            <include name="tops/engine/inserts/*.java"/>
        </javac>
        
        <jar destfile="${jar.dir}/inserts.jar">
            <manifest>
              <attribute name="Main-Class" value="tops.engine.inserts.Matcher"/>
            </manifest>
            <fileset dir="classes">
                <include name="tops/engine/*.class"/>
                <include name="tops/engine/inserts/*.class"/>
            </fileset>
        </jar>
    </target>
	
	<target description="juris&apos;s pattern discovery" name="juris">
		<javac debug="true" destdir="classes" srcdir="src">
			<include name="tops/engine/*.java"/>
			<include name="tops/engine/juris/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/juris.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="tops.engine.juris.Finder"/>
			</manifest>
			<fileset dir="classes">
				<include name="tops/engine/*.class"/>
			    <include name="tops/engine/juris/*.class"/>
            </fileset>
		</jar>
	</target>

	<target description="generate the user manual" name="manual">
		<echo message="deleting old manual"/>
		<delete>
			<fileset dir="${manual.out}" includes="*"/>
		</delete>
		<echo message="Generating user manual"/>
		<java classname="com.icl.saxon.StyleSheet" classpath="${lib}/saxon/saxon.jar" dir="${manual.out}" fork="true">
			<arg value="${manual.src}/manual.xml"/>
			<arg value="${docbook.dir}/html/chunk.xsl"/>
		</java>
	</target>

	<target name="model">
		<javac debug="true" destdir="classes" srcdir="src">
			<include name="tops/model/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/model.jar" update="true">
			<fileset dir="classes">
				<include name="tops/model/*.class"/>
				<include name="tops/engine/TopsStringFormatException.class"/>
			</fileset>
		</jar>
	</target>
	
	<target description="setup the necessary directories" name="setup">
		<mkdir dir="classes"/>
		<mkdir dir="jars"/>
	</target>
	
	
	<target description="the multi-viewer application" name="topsviewer" depends="drg">
		<javac debug="true" destdir="classes" srcdir="src">
			<include name="tops/view/tops2D/app/*.java"/>
			<include name="tops/view/tops2D/diagram/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/2D.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="tops.view.tops2D.app.TOPSViewer"/>
			</manifest>
			<fileset dir="classes">
				<include name="tops/view/tops2D/app/*.class"/>
				<include name="tops/view/tops2D/diagram/*.class"/>
				<include name="tops/engine/*.class"/>
				<include name="tops/engine/drg/*.class"/>
			</fileset>
		</jar>
	</target>

	<target description="the tiny viewer" name="tiny">
		<javac debug="true" destdir="classes" srcdir="src">
			<include name="tops/view/tops2D/app/TinyViewer.java"/>
			<include name="tops/view/tops2D/app/TParser.java"/>
			<include name="tops/view/tops2D/app/LinearViewPanel.java"/>
			<include name="tops/view/tops2D/diagram/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/tiny.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="tops.view.tops2D.app.TinyViewer"/>
			</manifest>
			<fileset dir="classes">
				<include name="tops/view/tops2D/app/TinyViewer.class"/>
				<include name="tops/view/tops2D/app/TParser.class"/>
				<include name="tops/view/tops2D/app/LinearViewPanel.class"/>
				<include name="tops/view/tops2D/diagram/*.class"/>
			</fileset>
		</jar>
	</target>

	<target description="pdb to dssp translation" name="translation">
		<javac debug="true" classpath="${vecmathjar}" destdir="classes" srcdir="src">
			<include name="tops/translation/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/translation.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="tops.translation.Tops2String"/>
			</manifest>
			<fileset dir="classes">
				<include name="tops/translation/*.class"/>
			</fileset>
		</jar>
	</target>
	
	<target name="tops3D">
		<javac classpath="${vecmathjar}" debug="true" destdir="classes" srcdir="src">
			<include name="tops/view/tops3D/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/3D.jar" update="true">
			<manifest>
				<attribute name="Main-Class" value="tops.view.tops3D.TOPS3DFrame"/>
			</manifest>
			<fileset dir="classes">
				<include name="tops/view/tops3D/*.class"/>
			</fileset>
		</jar>
	</target>

	<target depends="web-test" description="move the topsfile archives to the test web directory" name="topsfiles-test">
		<mkdir dir="${test.dir}/topsfiles"/>
		<copy file="data/topsfiles/cath_${cath.version}.topsfiles.tar.gz" todir="${test.dir}/topsfiles"/>
		<gunzip src="${test.dir}/topsfiles/cath_${cath.version}.topsfiles.tar.gz"/>
		<untar src="${test.dir}/topsfiles/cath_${cath.version}.topsfiles.tar" dest="${test.dir}/topsfiles"/>
		<delete file="${test.dir}/topsfiles/cath_${cath.version}.topsfiles.tar"/>
		<copy file="data/topsfiles/scop_${scop.version}.topsfiles.tar.gz" todir="${test.dir}/topsfiles"/>
		<gunzip src="${test.dir}/topsfiles/scop_${scop.version}.topsfiles.tar.gz"/>
		<untar src="${test.dir}/topsfiles/scop_${scop.version}.topsfiles.tar" dest="${test.dir}/topsfiles"/>
		<delete file="${test.dir}/topsfiles/scop_${scop.version}.topsfiles.tar"/>
	</target>

	<!-- NOT YET DONE! : need to find a way to unpack these over secure connection!
	<target description="move the topsfile archives to the production web directory" name="topsfiles-production">
		<copy file="data/topsfiles/cath_${cath.version}.topsfiles.tar.gz" todir="${test.dir}/topsfiles"/>
		<gunzip src="${test.dir}/topsfiles/cath_${cath.version}.topsfiles.tar.gz"/>
		<untar src="${test.dir}/topsfiles/cath_${cath.version}.topsfiles.tar" dest="${test.dir}/topsfiles"/>
		<delete file="${test.dir}/topsfiles/cath_${cath.version}.topsfiles.tar"/>
		<copy file="data/topsfiles/scop_${scop.version}.topsfiles.tar.gz" todir="${test.dir}/topsfiles"/>
		<gunzip src="${test.dir}/topsfiles/scop_${scop.version}.topsfiles.tar.gz"/>
		<untar src="${test.dir}/topsfiles/scop_${scop.version}.topsfiles.tar" dest="${test.dir}/topsfiles"/>
		<delete file="${test.dir}/topsfiles/scop_${scop.version}.topsfiles.tar"/>
	</target>
	-->

	<target 
		depends="db, display, drg, engine, webengine"
		description="distribute the web stuff to a test server" 
		name="web-test">
		<mkdir dir="${test.dir}"/>
		<copy file="bin/dssp" todir="${test.dir}"/>
		<copy file="bin/tops" todir="${test.dir}"/>
		<copy file="data/tops.def" todir="${test.dir}"/>
		<mkdir dir="${test.dir}/images"/>
		<copy todir="${test.dir}/images">
			<fileset dir="${basedir}/docs/pictures"/>
		</copy>
		<mkdir dir="${test.dir}/accesslogs"/>
		<mkdir dir="${test.dir}/filelogs"/>
		<mkdir dir="${test.dir}/scratch"/>
		<mkdir dir="${test.dir}/WEB-INF"/>
		<copy file="docs/xml-config-files/web-test.xml" tofile="${test.dir}/WEB-INF/web.xml"/>
		<copy file="${thirdpartylib.dir}/pja.pjaf" todir="${test.dir}/WEB-INF"/>
		<mkdir dir="${test.dir}/WEB-INF/classes"/>
		<mkdir dir="${test.dir}/WEB-INF/lib"/>
		<copy file="${jar.dir}/db.jar" todir="${test.dir}/WEB-INF/lib"/>
		<copy file="${jar.dir}/display.jar" todir="${test.dir}/WEB-INF/lib"/>
		<copy file="${jar.dir}/drg.jar" todir="${test.dir}/WEB-INF/lib"/>
		<copy file="${jar.dir}/dw_tops.jar" todir="${test.dir}/WEB-INF/lib"/>
		<copy file="${jar.dir}/engine.jar" todir="${test.dir}/WEB-INF/lib"/>
        <copy file="${jar.dir}/inserts.jar" todir="${test.dir}/WEB-INF/lib"/>
		<copy file="${jar.dir}/translation.jar" todir="${test.dir}/WEB-INF/lib"/>
		<copy file="${jar.dir}/webengine.jar" todir="${test.dir}/WEB-INF/lib"/>
		<copy todir="${test.dir}/WEB-INF/lib">
			<fileset dir="${thirdpartylib.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
	</target>

	<target description="servlets for interfacing with pattern" name="webengine">
		<javac classpath="${servletjar}:${utilsjar}:${oreillyjar}:${jar.dir}/translation.jar" 
			debug="true" destdir="classes" srcdir="src">
			<include name="tops/web/engine/*.java"/>
			<include name="tops/translation/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/webengine.jar" update="true">
			<fileset dir="classes">
				<include name="tops/web/engine/*.class"/>
				<include name="tops/translation/*.class"/>
			</fileset>
		</jar>
	</target>

	<target depends="webengine" description="PRODUCE servlets for interfacing with pattern" name="webengine-production">
		<exec executable="scp">
			<arg line="${jar.dir}/webengine.jar ${production.server}:~/tops/WEB-INF/lib"/>
		</exec>
		<antcall target="reload-production"/>
	</target>

	<target depends="webengine" description="TEST servlets for interfacing with pattern" name="webengine-test">
		<copy todir="${test.dir}/WEB-INF/lib" file="${jar.dir}/webengine.jar"/>
	</target>

	<target description="the XML input/output machinery" name="xml">
		<javac classpath="${dwjar}" debug="true" destdir="classes" srcdir="src">
			<include name="tops/xml/*.java"/>
		</javac>
		<jar destfile="${jar.dir}/xml.jar" update="true">
			<fileset dir="classes">
				<include name="tops/xml/*.class"/>
			</fileset>
		</jar>
	</target>
    
</project>
